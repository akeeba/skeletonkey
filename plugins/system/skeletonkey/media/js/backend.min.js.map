{"version":3,"sources":["backend.js"],"names":[],"mappings":"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","file":"backend.min.js","sourcesContent":["/*\n * @package   Skeletonkey\n * @copyright Copyright Â© 2022-2022 Nicholas K. Dionysopoulos\n * @license   GPLv3 or later\n */\n\n'use strict';\n\nif (!window.Joomla)\n{\n\tthrow new Error('Joomla API was not properly initialised');\n}\n\nconst initSkeletonKey = () => {\n\t// Get the user list rows\n\tconst options = Joomla.getOptions('plg_system_skeletonkey');\n\tconst rows    = document.querySelectorAll('table#userList>tbody tr');\n\n\t// No user rows? Nothing to do here.\n\tif (!rows || rows.length < 1)\n\t{\n\t\treturn;\n\t}\n\n\t// Iterate through all of the rows\n\trows.forEach((elRow) => {\n\t\t// Get the user ID\n\t\tconst elCells = elRow.querySelectorAll('td');\n\t\tconst userId  = elCells[elCells.length - 1].textContent * 1;\n\n\t\t// If we are not allowed to log in this user go away.\n\t\tif (options.loginUsers.indexOf(userId) === -1)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// Find the button group which has the Add Note button\n\t\tconst elButtonGroups = elRow.querySelectorAll('th div.btn-group');\n\t\tconst elButtonGroup  = elButtonGroups[0];\n\n\t\t// Create the icon for the login button\n\t\tconst elIcon = document.createElement('span');\n\t\telIcon.classList.add('fa', 'fa-sign-in-alt', 'me-1');\n\t\telIcon.setAttribute('aria-hidden', 'true');\n\n\t\t// Create the text for the login button\n\t\tconst elSpan       = document.createElement('span');\n\t\telSpan.textContent = Joomla.Text._('PLG_SYSTEM_SKELETONKEY_BTN_LABEL');\n\n\t\t// Create the login button itseld\n\t\tconst elLink = document.createElement('button');\n\t\telLink.setAttribute('type', 'button');\n\t\telLink.classList.add('btn', 'btn-dark', 'btn-sm');\n\t\telLink.appendChild(elIcon);\n\t\telLink.appendChild(elSpan);\n\n\t\t// Create a special click event handler\n\t\telLink.addEventListener('click', (e) => {\n\t\t\te.preventDefault();\n\n\t\t\tconst paths = Joomla.getOptions('system.paths');\n\t\t\tconst token = Joomla.getOptions('csrf.token');\n\t\t\tconst uri   = `${paths ? `${paths.base}/index.php` : window.location.pathname}?option=com_ajax&format=json&plugin=skeletonkey&group=system&user_id=%d${token ? `&${token}=1` : ''}`;\n\n\t\t\tJoomla.request({\n\t\t\t\turl:       uri.replace('%d', userId.toString()),\n\t\t\t\tonSuccess: (data, xhr) => {\n\t\t\t\t\tconst returnedData = JSON.parse(data).data;\n\n\t\t\t\t\tif (!returnedData || returnedData[0] === false)\n\t\t\t\t\t{\n\t\t\t\t\t\tJoomla.renderMessages({\n\t\t\t\t\t\t\terror: [Joomla.Text._('PLG_SYSTEM_SKELETONKEY_ERR_LOGINFAILED')]\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\twindow.location = paths.rootFull;\n\t\t\t\t},\n\t\t\t\tonError:   (xhr) => {\n\t\t\t\t\tJoomla.renderMessages({\n\t\t\t\t\t\terror: [Joomla.Text._('PLG_SYSTEM_SKELETONKEY_ERR_LOGINFAILED_AJAX')]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// Append the login button to the button group, after the Add Note button\n\t\telButtonGroup.appendChild(elLink);\n\t});\n}\n\ninitSkeletonKey();\n"]}